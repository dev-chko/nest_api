name: Docker Compose CI / CD

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 0. env 확인
      - name: env Check
        env:
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          echo "${{ env.USERNAME }} ${{ env.PASSWORD }} ${{ env.DOCKER_USERNAME}}"
          echo "${{ secrets.USERNAME }} ${{ secrets.PASSWORD }} ${{ secrets.DOCKER_USERNAME}} ${{ secrets.DOCKER_USERNAME }}"
          echo " USERNAME: $USERNAME"
      # 1. 소스 코드를 체크아웃
      - name: Check out the repository
        uses: actions/checkout@v2

      # 2. .env파일 생성
      - name: Generate .env file
        run: |
          cat <<EOF > ./.env
          USERNAME=${{ secrets.USERNAME }}
          PASSWORD=${{ secrets.PASSWORD }}
          COOKIE_KEY=${{ secrets.COOKIE_KEY }} 
          EOF
          echo "$USERNAME $PASSWORD $COOKIE_KEY"

      # 3. Docker와 docker-compose 설치
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update && sudo apt-get install docker-compose -y

      # 4. docker-compose를 사용하여 컨테이너 빌드 및 실행
      - name: Build and Run docker-compose
        run: |
          docker-compose up -d --build

      # 5. docker image tag & docker hub push
      - name: Tag and push Docker image to Docker hub
        run: |
          docker tag mycv:latest ${{ secrets.DOCKERUSER_NAME }}/nest-mycv:latest
          docker push ${{ secrets.DOCKERUSER_NAME }}/nest-mycv:latest
  deploy:
    runs-on: self-hosted
    needs: build-and-push
    if: github.event_name == 'pull_request' && github.base_ref == 'main'

    steps:
      - name: Deploy to Server
        run: |
          docker-compose up -d --build
